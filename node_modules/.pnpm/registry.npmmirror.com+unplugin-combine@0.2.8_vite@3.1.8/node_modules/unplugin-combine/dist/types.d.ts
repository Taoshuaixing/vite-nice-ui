import { Configuration } from 'webpack';
import { InputOptions, Plugin as Plugin$1 } from 'rollup';
import { Plugin as Plugin$2 } from 'vite';
export { Plugin as VitePlugin } from 'vite';
import { Plugin as Plugin$3 } from 'esbuild';
export { Plugin as EsbuildPlugin } from 'esbuild';

declare type RollupPluginList = NonNullable<InputOptions['plugins']>;
declare type RollupPlugin = Plugin$1 & {
    combinedPlugins: RollupPlugin[];
};

declare type WebpackPlugin = NonNullable<Configuration['plugins']> extends Array<infer T> ? T : never;
interface PluginMap {
    rollup: RollupPlugin;
    vite: Plugin$2;
    esbuild: Plugin$3;
    webpack: WebpackPlugin;
}
declare type PluginType = keyof PluginMap;
declare type Plugin = PluginMap[PluginType];

export { Plugin, PluginMap, PluginType, RollupPlugin, RollupPluginList, WebpackPlugin };
